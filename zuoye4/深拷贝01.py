import copy

list01 = [("qw", 1), 2, [3, 4, 5]]
print(f"第一层列表是: {list01},内存地址是: {id(list01)}")
print(f"第一层第0个元素中第一个元素是：{list01[0][1]},内存地址是：{id(list01[0][1])}")
print(f"第一层的第0个元素是: {list01[0]},内存地址是: {id(list01[0])}")
print(f"第一层的第2个元素是: {list01[2]},内存地址是: {id(list01[2])}")
print(f"第一层的第2个列表中第0元素是: {list01[2][0]},内存地址是: {id(list01[2][0])}")

print("--------------------------------")
list02 = copy.deepcopy(list01)
print(f"第二层列表是: {list02},内存地址是: {id(list02)}")
print(f"第二层第0个元素中第一个元素是：{list02[0][1]},内存地址是：{id(list02[0][1])}")
print(f"第二层的第0个元素是: {list02[0]},内存地址是: {id(list02[0])}")
print(f"第二层的第2个元素是: {list02[2]},内存地址是: {id(list02[2])}")
print(f"第二层的第2个列表中第0元素是: {list02[2][0]},内存地址是: {id(list02[2][0])}")

print("--------------------------------")
list03 = copy.deepcopy(list01)
print(f"第三层列表是: {list03},内存地址是: {id(list03)}")
print(f"第三层第0个元素中第一个元素是：{list03[0][1]},内存地址是：{id(list02[0][1])}")
print(f"第三层的第0个元素是: {list03[0]},内存地址是: {id(list03[0])}")
print(f"第三层的第2个元素是: {list03[2]},内存地址是: {id(list03[2])}")
print(f"第三层的第2个列表中第0元素是: {list03[2][0]},内存地址是: {id(list03[2][0])}")

# 总结:深拷贝就是可变对象的内存地址改变(其中包括嵌套可变对象，而嵌套的不可变类型对象的地址不会发生改变），但是可变与不可变对象其中的元素内存地址不会改变，
